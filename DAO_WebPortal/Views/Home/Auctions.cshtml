@{
    Layout = "../Shared/_MainLayout.cshtml";

}
@model List<Helpers.Models.WebsiteViewModels.AuctionViewModel>
<!-- Tab list -->
<ul class="nav nav-underline border-0 mb-3" role="tablist">
    <li class="nav-item mx-2">
        <a class="nav-link active" data-coreui-toggle="tab" href="#activeAuctionsTab" role="tab" aria-selected="false">
            <svg class="icon me-2">
                <use xlink:href="/Home/images/svg/free.svg#cil-media-play"></use>
            </svg>Active
        </a>
    </li>
    <li class="nav-item mx-2">
        <a class="nav-link" data-coreui-toggle="tab" href="#completedAuctionsTab" role="tab" aria-selected="true">
            <svg class="icon me-2">
                <use xlink:href="/Home/images/svg/free.svg#cil-check"></use>
            </svg>Completed
        </a>
    </li>
</ul>

<!-- Content -->
<div class="tab-content rounded-bottom mt-2">
    <!-- Tab panel -->
    <div class="tab-pane active" role="tabpanel" id="activeAuctionsTab">
        <!-- .card -->
        <div class="card mb-4">
            <div class="card-header">
                <span class="small ms-1"><b>Active Internal Auctions</b></span>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive h-250">
                    @if (Model.Where(x => x.Status == Helpers.Constants.Enums.AuctionStatusTypes.InternalBidding).Count() > 0)
                    {
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Job Name</th>
                                    <th scope="col">Auction Start Date</th>
                                    <th scope="col">Auction End Date</th>
                                    <th scope="col">Time Left</th>
                                    <th scope="col">Bid Count</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var internalAuctions = Model.Where(x => x.Status == Helpers.Constants.Enums.AuctionStatusTypes.InternalBidding).ToList();

                                    @foreach (var auction in internalAuctions)
                                    {
                                        <tr>
                                            <th scope="row">@auction.AuctionID</th>
                                            <td><a href="../Job-Detail/@auction.JobID">@DAO_WebPortal.Utility.StringHelper.ShortenString(auction.Title, 25)</a></td>
                                            <td>@auction.CreateDate.ToString("MM/dd/yyyy")</td>
                                            <td>@auction.InternalAuctionEndDate.ToString("MM/dd/yyyy")</td>
                                            <td><b id="counter_@auction.AuctionID"></b></td>
                                            <td>@auction.BidCount</td>
                                            <td>
                                                <a class="btn btn-sm btn-primary me-2" href="../Auction-Detail/@auction.AuctionID">
                                                    <svg class="icon">
                                                        <use xlink:href="/Home/images/svg/free.svg#cil-notes"></use>
                                                    </svg> Show Bids
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <partial name="../Shared/_EmptyPartial.cshtml" view-data='new ViewDataDictionary(ViewData) { { "Message", "Auction not found." } }' />
                    }
                </div>
            </div>
        </div> <!-- .card -->
        <!-- .card -->
        <div class="card">
            <div class="card-header"><span class="small ms-1"><b>Active Public Auctions</b></span></div>
            <div class="card-body p-0">
                <div class="table-responsive h-250">
                    @if (Model.Where(x => x.Status == Helpers.Constants.Enums.AuctionStatusTypes.PublicBidding).Count() > 0)
                    {
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Job Name</th>
                                    <th scope="col">Auction Start Date</th>
                                    <th scope="col">Auction End Date</th>
                                    <th scope="col">Time Left</th>
                                    <th scope="col">Bid Count</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var publicAuctions = Model.Where(x => x.Status == Helpers.Constants.Enums.AuctionStatusTypes.PublicBidding).ToList();

                                    @foreach (var auction in publicAuctions)
                                    {
                                        <tr>
                                            <th scope="row">@auction.AuctionID</th>
                                            <td><a href="../Job-Detail/@auction.JobID">@DAO_WebPortal.Utility.StringHelper.ShortenString(auction.Title, 25)</a></td>
                                            <td>@auction.InternalAuctionEndDate.ToString("MM/dd/yyyy")</td>
                                            <td>@auction.PublicAuctionEndDate.ToString("MM/dd/yyyy")</td>
                                            <td><b id="counter_@auction.AuctionID"></b></td>
                                            <td>@auction.BidCount</td>
                                            <td>
                                                <a class="btn btn-sm btn-primary me-2" href="../Auction-Detail/@auction.AuctionID">
                                                    <svg class="icon">
                                                        <use xlink:href="/Home/images/svg/free.svg#cil-notes"></use>
                                                    </svg> Show Bids
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <partial name="../Shared/_EmptyPartial.cshtml" view-data='new ViewDataDictionary(ViewData) { { "Message", "Auction not found." } }' />
                    }
                </div>
            </div>
        </div> <!-- .card -->
    </div>
    <!-- Tab panel -->
    <div class="tab-pane" role="tabpanel" id="completedAuctionsTab">
        <!-- .card -->
        <div class="card mb-4">
            <div class="card-header">
                <span class="small ms-1"><b>Completed Auctions</b></span>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive h-250">
                    @if (Model.Where(x => x.Status == Helpers.Constants.Enums.AuctionStatusTypes.Completed).Count() > 0)
                    {
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Job Name</th>
                                    <th scope="col">Auction Start Date</th>
                                    <th scope="col">Auction End Date</th>
                                    <th scope="col">Winner User</th>
                                    <th scope="col">Bid Count</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var completedAuctions = Model.Where(x => x.Status == Helpers.Constants.Enums.AuctionStatusTypes.Completed).ToList();

                                    @foreach (var auction in completedAuctions)
                                    {
                                        <tr>
                                            <th scope="row">@auction.AuctionID</th>
                                            <td><a href="../Job-Detail/@auction.JobID">@DAO_WebPortal.Utility.StringHelper.ShortenString(auction.Title, 25)</a></td>
                                            <td>@auction.InternalAuctionEndDate.ToString("MM/dd/yyyy")</td>
                                            <td>@auction.PublicAuctionEndDate.ToString("MM/dd/yyyy")</td>
                                            <td>@auction.WinnerUserName</td>
                                            <td>@auction.BidCount</td>
                                            <td>
                                                <a class="btn btn-sm btn-primary me-2" href="../Auction-Detail/@auction.AuctionID">
                                                    <svg class="icon">
                                                        <use xlink:href="/Home/images/svg/free.svg#cil-notes"></use>
                                                    </svg> Show Bids
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <partial name="../Shared/_EmptyPartial.cshtml" view-data='new ViewDataDictionary(ViewData) { { "Message", "Auction not found." } }' />
                    }
                </div>
            </div>
        </div><!-- .card -->
        <!-- .card -->
        <div class="card">
            <div class="card-header"><span class="small ms-1"><b>Expired Auctions</b></span></div>
            <div class="card-body p-0">
                <div class="table-responsive h-250">
                    @if (Model.Where(x => x.Status == Helpers.Constants.Enums.AuctionStatusTypes.Expired).Count() > 0)
                    {
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Job Name</th>
                                    <th scope="col">Auction Start Date</th>
                                    <th scope="col">Auction End Date</th>
                                    <th scope="col">Winner User</th>
                                    <th scope="col">Bid Count</th>
                                    <th scope="col"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var expiredAuctions = Model.Where(x => x.Status == Helpers.Constants.Enums.AuctionStatusTypes.Expired).ToList();

                                    @foreach (var auction in expiredAuctions)
                                    {
                                        <tr>
                                            <th scope="row">@auction.AuctionID</th>
                                            <td><a href="../Job-Detail/@auction.JobID">@DAO_WebPortal.Utility.StringHelper.ShortenString(auction.Title, 25)</a></td>
                                            <td>@auction.InternalAuctionEndDate.ToString("MM/dd/yyyy")</td>
                                            <td>@auction.PublicAuctionEndDate.ToString("MM/dd/yyyy")</td>
                                            <td>-</td>
                                            <td>@auction.BidCount</td>
                                            <td>
                                                <a class="btn btn-sm btn-primary me-2" href="../Auction-Detail/@auction.AuctionID">
                                                    <svg class="icon">
                                                        <use xlink:href="/Home/images/svg/free.svg#cil-notes"></use>
                                                    </svg> Show Bids
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <partial name="../Shared/_EmptyPartial.cshtml" view-data='new ViewDataDictionary(ViewData) { { "Message", "Auction not found." } }' />
                    }
                </div>
            </div>
        </div><!-- .card -->
    </div>
</div>


@section Scripts{

    <script>

        //Get auctions json model for time left counter
        dataModel = @Html.Raw(Json.Serialize(Model.Where(x=>x.Status == Helpers.Constants.Enums.AuctionStatusTypes.InternalBidding || x.Status == Helpers.Constants.Enums.AuctionStatusTypes.PublicBidding).ToList()));

        var auctionCountdownDictionary = {};

        $(document).ready(function () {

            //Start auction countdowns
            for (i = 0; i < dataModel.length; i++) {
                if (dataModel[i].status == 1) {
                    var countDownDate = new Date(dataModel[i].internalAuctionEndDate).getTime();
                } else {
                    var countDownDate = new Date(dataModel[i].publicAuctionEndDate).getTime();
                }
                auctionCountdownDictionary[dataModel[i].auctionID] = countDownDate;
                CountDown(dataModel[i].auctionID, countDownDate);
                StartInterval(dataModel[i], 1000)
            }

        });

        //Send auctionIDs to CountDown function
        function StartInterval(index, frequency) {
            setInterval(function () {
                CountDown(index.auctionID, auctionCountdownDictionary[index.auctionID]);
            }, frequency);
        }

        //Countdown method
        function CountDown(id, countDownDate) {

            var now = new Date().getTime();
            countDownDate = auctionCountdownDictionary[id];
            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Output the result in an element with id="counter_id"
            document.getElementById("counter_" + id).innerHTML = "<span>" + days.toString() + "</span>" + "D <span>" + hours.toString().padStart(2, '0') + "</span>:<span>"
                + minutes.toString().padStart(2, '0') + "</span>:<span>" + seconds.toString().padStart(2, '0') + "</span>";

            // If the count down is over, write some text
            if (distance < 0) {
                document.getElementById("counter_" + id).innerHTML = "EXPIRED";
            }
        }

    </script>
}