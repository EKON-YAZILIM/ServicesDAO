@using DAO_WebPortal.Resources
@using Helpers.Constants
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@model Helpers.Models.WebsiteViewModels.AuctionDetailViewModel

@{
    Layout = "../Shared/_MainLayout.cshtml";
}

@{
    string userType = httpContextAccessor.HttpContext.Session.GetString("UserType");
}

<div class="row d-flex m-2 mb-3">
    <div class="col-md-6">
        <a class="btn btn-primary btn-shine" href="../Auctions">
            <svg class="icon me-2">
                <use xlink:href="/Home/images/svg/free.svg#cil-chevron-circle-left-alt"></use>
            </svg> Go Back
        </a>
    </div>
    <div class="col-md-6 d-flex justify-content-end">
        @*New bid button will be active for only authorized members*@
        @if ((Model.Auction.Status == Enums.AuctionStatusTypes.InternalBidding && userType == Enums.UserIdentityType.VotingAssociate.ToString()) ||
     (Model.Auction.Status == Enums.AuctionStatusTypes.PublicBidding && userType == Enums.UserIdentityType.Associate.ToString()))
        {
            //If user is not job poster display new bid button
            if (httpContextAccessor.HttpContext.Session.GetInt32("UserID") != Model.Auction.JobPosterUserId)
            {
                <div class="row d-flex m-2 mb-3">                 
                    <div class="col-md-12 d-flex justify-content-end">
                        <a class="btn btn-primary btn-shine" data-coreui-toggle="modal" data-coreui-target="#Auction-Modal">
                            <svg class="icon me-2">
                                <use xlink:href="/Home/images/svg/free.svg#cil-plus"></use>
                            </svg>New Bid
                        </a>
                    </div>
                </div>
            }
        }
    </div>
</div>





<!--Bids-->
<div class="card m-2">
    <div class="card-header">
        <!-- .header -->
        <span class="small ms-1"><b>Auction Bids Table</b></span>
        <a href="../Job-Detail/@Model.Auction.JobID" class="float-right">Go to job details</a>
    </div><!-- .header -->
    <!-- Card Body -->
    <div class="card-body p-0">
        @if (Model.BidItems.Count > 0)
        {
            <div class="table-responsive h-500">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Name</th>
                            <th scope="col">Username</th>
                            <th class="cursorp thSort" scope="col">Price <i class="fas fa-sort"></i></th>
                            <th class="cursorp thSort" scope="col">Time (days) <i class="fas fa-sort"></i></th>
                            <th class="cursorp thSort" scope="col">Reputation Stake <i class="fas fa-sort"></i></th>
                            <th scope="col">User Note</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{int Count = 0;}
                        @foreach (var item in Model.BidItems)
                        {
                            Count++;

                            //Set green border for winner bid
                            string borderStyle = "";
                            if (item.AuctionBidID == Model.Auction.WinnerAuctionBidID)
                            {
                                borderStyle = "border: 3px solid #77c97a";
                            }

                            <tr style="@borderStyle">
                                <th scope="row">@Count</th>
                                <td id="name_@item.AuctionBidID">@item.NameSurname</td>
                                <td>@item.UserName</td>
                                <td>@item.Price</td>
                                <td>@item.Time</td>
                                <td>@item.ReputationStake</td>
                                <td>@item.UserNote</td>
                                <td class="text-right">

                                    @*If bidding continues, show buttons *@
                                    @if (Model.Auction.Status == Enums.AuctionStatusTypes.InternalBidding || Model.Auction.Status == Enums.AuctionStatusTypes.PublicBidding)
                                    {
                                        @*If user is job poster , show select winner bid button *@
                                        if (Model.Auction.JobPosterUserId == httpContextAccessor.HttpContext.Session.GetInt32("UserID"))
                                        {
                                            <a class="btn btn-sm btn-primary me-2 cursorp" onclick="ChooseAsWinnerBidModal(@item.AuctionBidID)">
                                                <svg class="icon">
                                                    <use xlink:href="/Home/images/svg/free.svg#cil-star"></use>
                                                </svg> Select Winner
                                            </a>
                                        }

                                        @*If user already have bid, show delete bid button *@
                                        if (item.UserId == httpContextAccessor.HttpContext.Session.GetInt32("UserID"))
                                        {
                                            <a class="btn btn-sm btn-primary me-2" data-coreui-toggle="modal" data-coreui-target="#DeleteBidModal">
                                                <svg class="icon">
                                                    <use xlink:href="/Home/images/svg/free.svg#cil-trash"></use>
                                                </svg> Delete Bid
                                            </a>
                                        }
                                    }

                                    @*Show winner bid icon*@
                                    @if (item.AuctionBidID == Model.Auction.WinnerAuctionBidID)
                                    {
                                        <i class="fas fa-star" title="Winner Bid"></i><span> Selected as winner</span>
                                    }

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <partial name="../Shared/_EmptyPartial.cshtml" view-data='new ViewDataDictionary(ViewData) { { "Message", "There are no bids in this auction" }, { "Icon", "frown-open" } }' />
        }
    </div><!-- Card Body -->
</div>

<!--New Bid Modal  -->
<div class="modal fade" id="Auction-Modal" tabindex="-1" aria-labelledby="AddBid" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AddBid">New Bid for Auction #@Model.Auction.AuctionID</h5>
                <button class="btn-close" type="button" data-coreui-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label" for="price"><b>Price</b></label>
                    <div class="input-group mb-3">
                        <span class="input-group-text">€</span>
                        <input class="form-control" type="number" aria-label="price" placeholder="Price" id="price"><span class="input-group-text" oninput="CheckNumbers(this)">.00</span>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="time"><b>Time</b></label>
                    <div class="input-group mb-3">
                        <input class="form-control" type="number" aria-label="Time" placeholder="Time" id="time" oninput="CheckNumbers(this)"><span class="input-group-text">days</span>
                    </div>
                </div>
                @if (userType == Enums.UserIdentityType.Associate.ToString())
                {
                    <div class="mb-3">
                        <label class="form-label" for="Note"><b>Note</b> (Please put your resume or portfolio if you are not known member of this DAO)</label>
                        <div class="input-group mb-3">
                            <textarea class="form-control" type="text" aria-label="Note" placeholder="Note" id="note"></textarea>
                        </div>
                    </div>
                }

                @if (Model.Auction.Status == Enums.AuctionStatusTypes.InternalBidding)
                {
                    <div class="mb-3">
                        <label class="form-label" for="reputation"><b>Reputation Stake</b></label>
                        <div class="input-group mb-3">
                            <input class="form-control" type="text" placeholder="Reputation" id="reputation"><span class="input-group-text" id="basic-addon2"> Reputation Points</span>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-coreui-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary" onclick="AuctionBidAdd(this,@Model.Auction.AuctionID);">Submit Bid</button>
            </div>
        </div>
    </div>
</div>

@{
    var userBid = Model.BidItems.SingleOrDefault(x => x.UserId == httpContextAccessor.HttpContext.Session.GetInt32("UserID"));

    if (userBid != null)
    {
        <!--Delete Bid Modal  -->
        <div class="modal fade" id="DeleteBidModal" tabindex="-1" aria-labelledby="AddBid" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="AddBid">Delete Bid</h5>
                        <button class="btn-close" type="button" data-coreui-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete the bid?
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary" type="button" data-coreui-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary" onclick="DeleteBid(this,@userBid.AuctionBidID);">Delete Bid</button>
                    </div>
                </div>
            </div>
        </div>
    }
}

<!--Select Winner Bid Modal  -->
<div class="modal fade" id="SelectWinnerBidModal" tabindex="-1" aria-labelledby="AddBid" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AddBid">Select Winner Bid</h5>
                <button class="btn-close" type="button" data-coreui-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to select bid #<span id="winnerBidName"></span> as winner?
            </div>
            <div id="winnerButtons" class="modal-footer">
                <button class="btn btn-secondary" type="button" data-coreui-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary" onclick="ChooseAsWinnerBid(this,this.id);">Select Bid</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script>

        //Auction bids adding function
        function AuctionBidAdd(e, id) {
            $(e).prop("disabled", true);
            $(e).html('<i class="fas fa-circle-notch fa-spin"></i> Submitting Bid..');
                //Create auction bid model
                var price = $('#price').val()
                var time = $('#time').val();
                var note = $('#note').val();
                //Ajax post action
                $.ajax({
                    type: "POST",
                    url: "../Home/Auction_Bid_Add",
                    data: {
                        "price": price,
                        "time": time,
                        "auctionid": id,
                        "associateUserNote": note,
                        @if (Model.Auction.Status == Enums.AuctionStatusTypes.InternalBidding) { <text> "reputationStake": $('#reputation').val() </text> }
                    },
                    success: function (result) {
                        if (result.success) {
                            window.location.reload();
                        }
                        else {
                            toastr.warning(result.message);
                        }
                        $(e).prop("disabled", false);
                        $(e).html('Submit Bid');
                    },
                    failure: function (response) {
                        toastr.warning("@Lang.ConnectionError");
                        $(e).prop("disabled", false);
                        $(e).html('Submit Bid');
                    },
                    error: function (response) {
                        toastr.error("@Lang.UnexpectedError");
                        $(e).prop("disabled", false);
                        $(e).html('Submit Bid');
                    }
                });

            }

        //Bid delete function
        function DeleteBid(e, bidId) {
            $.confirm({
                title: 'Confirmation',
                content: 'Are you sure you want to delete your bid ?',
                buttons: {
                    cancel: {
                        text: 'Cancel'
                    },
                    confirm: {
                        text: 'Continue',
                        btnClass: 'btn btn-primary',
                        action: function () {
                            $(e).prop("disabled", true);
                            $(e).html('<i class="fas fa-circle-notch fa-spin"></i> Deleting Bid..');
                                //Ajax get action
                                $.ajax({
                                    type: "GET",
                                    url: "../Home/Auction_Bid_Delete",
                                    data: {
                                        "id": bidId,
                                    },
                                    success: function (result) {
                                        if (result.success) {
                                            window.location.reload();
                                        }
                                        else {
                                            toastr.warning(result.message);
                                        }
                                    },
                                    failure: function (response) {
                                            toastr.warning("@Lang.ConnectionError");
                                    },
                                    error: function (response) {
                                            toastr.error("@Lang.UnexpectedError");
                                    }
                                });
                            $(e).prop("disabled", false);
                            $(e).html('Delete Bid');
                        }
                    }
                }
            });
        }

        //Opens confirmation modal
        function ChooseAsWinnerBidModal(id) {
            $("#winnerBidName").text($("#name_"+id).text());
            $("#winnerButtons button:nth-of-type(2)").attr("id", id);
            $("#SelectWinnerBidModal").modal("toggle");
        }

        //Select winner bid function
        function ChooseAsWinnerBid(e, bidId) {
            $(e).prop("disabled", true);
            $(e).html('<i class="fas fa-circle-notch fa-spin"></i> Selecting Bid..');
                    //Ajax post action
                $.ajax({
                    type: "GET",
                    url: "../Home/ChooseWinnerBid",
                    data: {
                        "bidId": bidId
                    },
                    success: function (result) {
                            if (result.success) {
                                window.location.reload();
                            }
                            else {
                                toastr.warning(result.message);
                            }
                        },
                    failure: function (response) {
                            toastr.warning("@Lang.ConnectionError");
                    },
                    error: function (response) {
                            toastr.error("@Lang.UnexpectedError");
                    }
                });
            $(e).prop("disabled", false);
            $(e).html('Select Bid');
        }

        //Table sorting functions
        $('.thSort').click(function () {
            var table = $(this).parents('table').eq(0)
            var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()))
            this.asc = !this.asc
            if (!this.asc) { rows = rows.reverse() }
            for (var i = 0; i < rows.length; i++) { table.append(rows[i]) }
        })

        function comparer(index) {
            return function (a, b) {
                var valA = getCellValue(a, index), valB = getCellValue(b, index)
                return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB)
            }
        }

        function getCellValue(row, index) {
            return $(row).children('td').eq(index).text()
        }
    </script>
}

