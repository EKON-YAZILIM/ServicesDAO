@using DAO_WebPortal.Resources
@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";

}
@model Helpers.Models.WebsiteViewModels.JobPostDetailModel
<!-- Row -->
<div class="row">
    <div class="col-md-12">
        <div class="card mb-3">
            <!-- Header -->
            <div class="card-header">
                <div class="titleContainer">
                    <h5 class="card-title" title="Services DAO Portal Scoping Grant">@Model.JobPostWebsiteModel.Title</h5>
                    <small class="text-medium-emphasis">@Model.JobPostWebsiteModel.CreateDate.ToString("dd.MM.yyyy") , @Model.JobPostWebsiteModel.UserName</small>
                </div>
            </div><!-- Header -->
            <!-- Body -->
            <div class="card-body">
                <p class="p-3 card-text">
                    @Model.JobPostWebsiteModel.JobDescription
                </p>
                <p class="card-text"><small class="text-medium-emphasis">Last updated @Model.JobPostWebsiteModel.LastUpdate.ToString("dd.MM.yyyy")</small></p>
            </div><!-- Body -->
            <!-- Footer -->
            <div class="card-footer">
                <a class="card-text me-2 cA" data-coreui-toggle="collapse" href="#commentsx" aria-expanded="true" aria-controls="commentsx">
                    <svg class="icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-comment-bubble"></use>
                    </svg> @Model.JobPostWebsiteModel.CommentCount Comment
                </a>
                <a class="card-text me-2 cA" href="#" onclick="ShareJobPost();">
                    <svg class="icon">
                        <use xlink:href="/Home/images/svg/free.svg#cil-share"></use>
                    </svg> Share
                </a>
            </div><!-- Footer -->
            <!-- Comments footer -->
            <div id="commentsx" class="card-footer collapse show">
                <div id="comments" class="comment-thread">
                    @{
                        ShowCommentTree(Model.JobPostCommentModel.Where(x => x.SubCommentID == 0).ToList());
                    }
                </div>
                <!-- Job comment recursive function -->
                @functions{
                    int Count = 0;

                    public void ShowCommentTree(IList<Helpers.Models.WebsiteViewModels.JobPostCommentModel> currentcomments)
                    {
                        int SubCommentCount = 0;

                        @foreach (var commentItem in currentcomments)
                        {
                            Count = Count + 1;
                            SubCommentCount = SubCommentCount + 1;

                            <!-- Comment -->
                            <div class="comment" id="comment-@Count">

                                <!-- Add comment-border-link class-->
                                @if (currentcomments.Count() > SubCommentCount)
                                {
                                    <a href="#comment-@Count" class="comment-border-link">
                                        <span class="sr-only">Jump to comment-@Count</span>
                                    </a>
                                }
                                else
                                {
                                    <a href="#comment-@Count">
                                        <span class="sr-only">Jump to comment-@Count</span>
                                    </a>
                                }

                                <!-- Heading -->
                                <div class="comment-heading">
                                    <div class="comment-voting">
                                        <img class="avatar-img" src="../Home/images/avatars/@commentItem.ProfileImage" alt="somebody1">
                                    </div>
                                    <div class="comment-info">
                                        <a href="#" class="comment-author">@commentItem.UserName</a>
                                        <p class="m-0">
                                            @commentItem.Date.ToString("dd.MM.yyyy")
                                        </p>
                                    </div>
                                </div> <!-- Heading -->
                                <!-- Comment body -->
                                <div class="comment-body">

                                    @if (commentItem.Comment == "This comment is deleted by the owner.")
                                    {
                                        <p><i>@commentItem.Comment</i></p>
                                    }
                                    else
                                    {
                                        <p>@commentItem.Comment</p>
                                    }

                                    <!--Upvote click -->
                                    <a onclick="UpVote(@commentItem.JobPostCommentID);" class="card-text me-2 ms-2 cA cursorp">
                                        <!-- IsUpVote check-->
                                        @if (commentItem.IsUpVote == true)
                                        {
                                            <i class="fas fa-caret-square-up" id="voteUp_@commentItem.JobPostCommentID"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-caret-square-up" id="voteUp_@commentItem.JobPostCommentID"></i>
                                        }
                                        <span id="voteUpCount_@commentItem.JobPostCommentID">@commentItem.UpVote</span>
                                    </a>
                                    <!--Downvote click -->
                                    <a onclick="DownVote(@commentItem.JobPostCommentID);" class="card-text me-2 cA cursorp">
                                        @if (commentItem.IsUpVote == false)
                                        {
                                            <i class="fas fa-caret-square-down" id="voteDown_@commentItem.JobPostCommentID"></i>
                                        }
                                        else
                                        {
                                            <i class="far fa-caret-square-down" id="voteDown_@commentItem.JobPostCommentID"></i>
                                        }
                                        <span id="voteDownCount_@commentItem.JobPostCommentID">@commentItem.DownVote</span>

                                    </a>

                                    <!-- New comment click -->
                                    <a onclick="CreateReplyBox(this, @commentItem.JobPostCommentID)" class="card-text me-2 cA cursorp">
                                        <svg class="icon">
                                            <use xlink:href="/Home/images/svg/free.svg#cil-comment-bubble"></use>
                                        </svg> Reply
                                    </a>

                                    @if (commentItem.IsComment == true && commentItem.Comment != "This comment is deleted by the owner.")
                                    {
                                        <a onclick="DeleteComment(@commentItem.JobPostCommentID);" class="card-text me-2 cA cursorp" id="delete_@commentItem.JobPostCommentID">
                                            <svg class="icon">
                                                <use xlink:href="/Home/images/svg/free.svg#cil-trash"></use>
                                            </svg> Delete
                                        </a>
                                    }

                                </div>

                                <!-- Comment body -->
                                <div class="replies">
                                    @{
                                        if (Model.JobPostCommentModel.Count(x => x.SubCommentID == commentItem.JobPostCommentID) > 0)
                                        {
                                            ShowCommentTree(Model.JobPostCommentModel.Where(x => x.SubCommentID == commentItem.JobPostCommentID).ToList());
                                        }
                                    }
                                </div>
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>

    $(document).ready(function () {


    });

    //Upvote function
    function UpVote(id) {
        //Ajax get action
        $.ajax({
            type: "GET",
            url: "../Home/UpVote",
            data: { "JobPostCommentId": id },
            success: function (result) {

                //Update upvote and downvote count
                document.getElementById("voteUpCount_" + id).innerHTML = result.content[0];
                document.getElementById("voteDownCount_" + id).innerHTML = result.content[1];

                //Add and remove myClass
                //Checking for existence of myClass
                if ($("#voteUp_" + id).hasClass("fas")) {
                    $("#voteUp_" + id).removeClass("fas");
                    $("#voteUp_" + id).addClass("far");
                }
                else if ($("#voteDown_" + id).hasClass("fas")) {
                    $("#voteDown_" + id).removeClass("fas");
                    $("#voteDown_" + id).addClass("far");

                    $("#voteUp_" + id).removeClass("far");
                    $("#voteUp_" + id).addClass("fas");
                }
                else {
                    $("#voteUp_" + id).removeClass("far");
                    $("#voteUp_" + id).addClass("fas");
                }
            }
        });
    }

    //Downvote function
    function DownVote(id) {
        //Ajax get action
        $.ajax({
            type: "GET",
            url: "../Home/DownVote",
            data: { "JobPostCommentId": id },
            success: function (result) {

                //Update upvote and downvote count
                document.getElementById("voteDownCount_" + id).innerHTML =  result.content[1];
                document.getElementById("voteUpCount_" + id).innerHTML = result.content[0];

                //Add and remove myClass
                //Checking for existence of myClass
                if ($("#voteDown_" + id).hasClass("fas")) {
                    $("#voteDown_" + id).removeClass("fas");
                    $("#voteDown_" + id).addClass("far");
                }
                else if ($("#voteUp_" + id).hasClass("fas")) {
                    $("#voteUp_" + id).removeClass("fas");
                    $("#voteUp_" + id).addClass("far");

                    $("#voteDown_" + id).removeClass("far");
                    $("#voteDown_" + id).addClass("fas");
                }
                else {
                    $("#voteDown_" + id).removeClass("far");
                    $("#voteDown_" + id).addClass("fas");
                }
            }
        });
    }

    //Creates reply textbox below the comment
    function CreateReplyBox(e, commentid) {
        $(e).parent().append("<div class='comment-body mt-2'><textarea class='form-control' id='textarea-input-" + commentid + "' rows='3' placeholder='Your comment..'></textarea><div class='d-flex justify-content-end mt-1'><button class='btn btn-sm btn-block btn-primary' onclick='AddNewComment("+@Model.JobPostWebsiteModel.JobID+","+commentid+");'>Reply</button></div></div>")

    }

    //Add new Comment
    function AddNewComment(jobid, commentid) {

        $.ajax({
            type: "POST",
            url: "../Home/AddNewComment",
            data: { "JobId": jobid, "CommentId": commentid, "Comment": $("#textarea-input-"+commentid).val() },
            success: function (result) {
               console.log(result);
                    if (result.success) {
                        toastr.success(result.message);
                    }
                    else {
                        toastr.warning(result.message);
                    }
                },
                  failure: function (response) {
                        toastr.warning("@Lang.ConnectionError");
                },
                error: function (response) {
                     toastr.error("@Lang.UnexpectedError");

            }
        });
    }

    //Delete Comment
    function DeleteComment(commentid) {

        $.ajax({
            type: "DELETE",
            url: "../Home/DeleteComment",
            data: {  "CommentId": commentid },
            success: function (result) {
               console.log(result);
                    if (result.success) {
                        toastr.success(result.message);
                        //setTimeout(function () {
                        //    window.location.href = "./../Auction-Detail/"+id;
                        //}, 1000);
                    }
                    else {
                        toastr.warning(result.message);
                    }
                },
                  failure: function (response) {
                        toastr.warning("@Lang.ConnectionError");
                },
                error: function (response) {
                     toastr.error("@Lang.UnexpectedError");
            }
        });
    }

    //Share Job Post
    function ShareJobPost() {
        toastr.warning("This feature will be available in the next version.");
    }
    </script>
}