<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConnectionError" xml:space="preserve">
    <value>Could not receive response from the server.</value>
  </data>
  <data name="EmailError" xml:space="preserve">
    <value>Please enter an e-mail address registered in the system.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorMailMsg" xml:space="preserve">
    <value>There is an existing account with this email address.</value>
  </data>
  <data name="ErrorNote" xml:space="preserve">
    <value>An error occurred while proccesing your request.</value>
  </data>
  <data name="ErrorPasswordMsg" xml:space="preserve">
    <value>The password must contain at least 8 characters and contain 1 digit 1 lowercase 1 uppercase.</value>
  </data>
  <data name="ErrorUserMsg" xml:space="preserve">
    <value>There is an existing account with this Username.</value>
  </data>
  <data name="ErrorUsernamePassword" xml:space="preserve">
    <value>Username or password is wrong.</value>
  </data>
  <data name="IncorrectPassReset" xml:space="preserve">
    <value>Incorrect password reset request.</value>
  </data>
  <data name="LoginViewTitle" xml:space="preserve">
    <value>Welcome to ServicesDAO</value>
  </data>
  <data name="Login_AggreeTerms" xml:space="preserve">
    <value>I agree your terms and conditions</value>
  </data>
  <data name="Login_CheckTermsError" xml:space="preserve">
    <value>Please confirm user agreement.</value>
  </data>
  <data name="Login_ForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="Login_RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Login_SignInTitle" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="NotCompatiblePass" xml:space="preserve">
    <value>Passwords entered are not compatible.</value>
  </data>
  <data name="PasswordResetSuccess" xml:space="preserve">
    <value>Password reset link sent to your email.</value>
  </data>
  <data name="RegisterComplete" xml:space="preserve">
    <value>Registration completed. You can sign in with your email/username and password.</value>
  </data>
  <data name="RegisterEmailSent" xml:space="preserve">
    <value>Please confirm your account from your email.</value>
  </data>
  <data name="RegisterEmailTitle" xml:space="preserve">
    <value>Welcome to ServicesDAO</value>
  </data>
  <data name="RenewExpired" xml:space="preserve">
    <value>This password renewal request has expired.</value>
  </data>
  <data name="SecureNote" xml:space="preserve">
    <value>Enter security code</value>
  </data>
  <data name="Successful" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="SuccessLogin" xml:space="preserve">
    <value>Login successful.</value>
  </data>
  <data name="UnauthorizedAccess" xml:space="preserve">
    <value>You are unauthorized to perform this action.</value>
  </data>
  <data name="UnexpectedError" xml:space="preserve">
    <value>An unexpected error has occurred. Please try again later</value>
  </data>
  <data name="UpdatePassword" xml:space="preserve">
    <value>Your password has been updated. You can sign in with your new password.</value>
  </data>
  <data name="WrongErrorCodeEntered" xml:space="preserve">
    <value>Incorrect security code entry.</value>
  </data>
</root>