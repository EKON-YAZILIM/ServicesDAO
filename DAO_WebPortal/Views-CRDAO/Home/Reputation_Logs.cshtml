

@using PagedList.Core.Mvc
@using PagedList.Core
@model StaticPagedList<Helpers.Models.WebsiteViewModels.ReputationLogsDto>

@{
    Layout = "../Shared/_MainLayout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="row gx-3 gy-2 justify-content-center mb-4">
            <div class="col-sm-6">
                <div class="input-group">
                    <input id="searchText" type="text" class="form-control" placeholder="Search with user id.." aria-label="Search with username, name surname or user id.." aria-describedby="basic-addon2">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="button" onclick="DeleteSearch()">X</button>
                    </div>
                </div>
            </div>
            <div class="col-auto">
                <button class="btn btn-outline-primary" type="button" onclick="SearchWithUserId()">
                    <svg class="comment-icon m-0">
                        <use xlink:href="/Home/images/svg/free.svg#cil-search"></use>
                    </svg>
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Row -->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            @if (Model.Count() > 0)
            {
                <div class="table-responsive h-500">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th scope="col">User ID</th>
                                <th scope="col">Date</th>
                                <th scope="col">Title</th>
                                <th scope="col">Explanation</th>
                                <th scope="col">Earned Amount</th>
                                <th scope="col">Lost Amount</th>
                                <th scope="col">Staked Amount</th>
                                <th scope="col">Staked Released Amount</th>
                                <th scope="col">Last Total</th>
                                <th scope="col">Last Staked Total</th>
                                <th scope="col">Last Usable Total</th>

                            </tr>
                        </thead>
                        <tbody id="repTableBody">
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.UserID</td>
                                    <td>@item.Date</td>
                                    <td>@item.Title</td>
                                    <td>@item.Explanation</td>
                                    <td>@item.EarnedAmount</td>
                                    <td>@item.LostAmount</td>
                                    <td>@item.StakedAmount</td>
                                    <td>@item.StakeReleasedAmount</td>
                                    <td>@item.LastTotal</td>
                                    <td>@item.LastStakedTotal</td>
                                    <td>@item.LastUsableTotal</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

            }
            else
            {
                <partial name="../Shared/_EmptyPartial.cshtml" view-data='new ViewDataDictionary(ViewData) { { "Message", "Reputation not found." } }' />
            }

        </div>
    </div>
</div>

@if (Model.Count() > 0)
{
    @*############ PAGINATION ############*@
    <div class="row">
        <div class="col-md-12">
            <table class="my-3 w-100">
                <tr>
                    <td colspan="3" align="center">
                        <pager class="pager-container" list="@Model" options="@PagedListRenderOptions.Bootstrap4Full" asp-action="Reputation-Logs" asp-controller="Home" />
                    </td>
                </tr>
            </table>
        </div>
    </div>
}

@section Scripts{
    <script>
        var searched = false;
        $('#searchText').on('keypress', function (e) {
            if (e.which == 13) {
                SearchWithUserId();
            }
        });

        function SearchWithUserId() {
            var searchText = $("#searchText").val();
            if (searchText != "") {
                $.ajax({
                    type: "GET",
                    url: "../Home/ReputationSearch",
                    data: { "searchText": searchText },
                    success: function (result) {
                        if (result.length) {
                            console.log(result);
                            searched = true;
                            $("#repTableBody").empty();
                            $("pagination").addClass("d-none");
                            for (var i = 0; i < result.length; i++) {
                                var Row = "<tr><td>" + result[i].userID + "</td>";
                                Row += "<td>" + result[i].date.replace("T", " ") + "</td>";
                                Row += "<td>" + result[i].title + "</td>";
                                Row += "<td>" + result[i].explanation + "</td>";
                                Row += "<td>" + result[i].earnedAmount + "</td>";
                                Row += "<td>" + result[i].lostAmount + "</td>";
                                Row += "<td>" + result[i].stakedAmount + "</td>";
                                Row += "<td>" + result[i].stakeReleasedAmount + "</td>";
                                Row += "<td>" + result[i].lastTotal + "</td>";
                                Row += "<td>" + result[i].lastStakedTotal + "</td>";
                                Row += "<td>" + result[i].lastUsableTotal + "</td></tr>";
                                $("#repTableBody").append(Row);
                            }
                        }
                        else {
                            toastr.warning("User not found.");
                        }
                    }
                });
            }
        }
        function DeleteSearch() {
            if (searched) {
                window.location.reload();
            }
        }
    </script>
}