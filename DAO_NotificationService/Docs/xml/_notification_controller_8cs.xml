<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_notification_controller_8cs" kind="file" language="C#">
    <compoundname>NotificationController.cs</compoundname>
    <innerclass refid="class_d_a_o___notification_service_1_1_controllers_1_1_notification_controller" prot="public">DAO_NotificationService::Controllers::NotificationController</innerclass>
    <innernamespace refid="namespace_d_a_o___notification_service">DAO_NotificationService</innernamespace>
    <innernamespace refid="namespace_d_a_o___notification_service_1_1_controllers">DAO_NotificationService::Controllers</innernamespace>
    <innernamespace refid="namespace_helpers">Helpers</innernamespace>
    <innernamespace refid="namespace_helpers_1_1_models_1_1_dto_models_1_1_main_db_dto">Helpers::Models::DtoModels::MainDbDto</innernamespace>
    <innernamespace refid="namespace_helpers_1_1_models_1_1_notification_models">Helpers::Models::NotificationModels</innernamespace>
    <innernamespace refid="namespacestatic">static</innernamespace>
    <innernamespace refid="namespace_helpers_1_1_constants_1_1_enums">Helpers::Constants::Enums</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Threading.Tasks;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Helpers;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Helpers.Models.DtoModels.MainDbDto;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Helpers.Models.NotificationModels;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Helpers.Models.SharedModels;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.AspNetCore.Mvc;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Helpers.Constants.Enums;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_d_a_o___notification_service_1_1_controllers" kindref="compound">DAO_NotificationService.Controllers</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>[Route(</highlight><highlight class="stringliteral">&quot;[controller]&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>[ApiController]</highlight></codeline>
<codeline lineno="19" refid="class_d_a_o___notification_service_1_1_controllers_1_1_notification_controller" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_a_o___notification_service_1_1_controllers_1_1_notification_controller" kindref="compound">NotificationController</ref><sp/>:<sp/>Controller</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Route(</highlight><highlight class="stringliteral">&quot;SendEmail&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[HttpPost]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SimpleResponse<sp/><ref refid="class_d_a_o___notification_service_1_1_controllers_1_1_notification_controller_1a01e709114320c397a38ca4832a97f762" kindref="member">SendEmail</ref>(SendEmailModel<sp/>model)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(model.TargetGroup<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;UserDto&gt;<sp/>targetUsers<sp/>=<sp/>Helpers.Serializers.DeserializeJson&lt;List&lt;UserDto&gt;&gt;(Helpers.Request.Get(<ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1ab95198e9ba5de6d66f0fd5b68c9eba76" kindref="member">_settings</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1_1_settings_1aaf3b073ef3ccc2cff84b27b0d0eb9914" kindref="member">Service_Db_Url</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Users/GetUsersByType?type=&quot;</highlight><highlight class="normal"><sp/>+<sp/>model.TargetGroup));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(targetUsers<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>targetUsers.Count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.To<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;()<sp/>{<sp/><ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1ab95198e9ba5de6d66f0fd5b68c9eba76" kindref="member">_settings</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1_1_settings_1ad7f2b773bce56ecced1a94c14a6b1d80" kindref="member">EmailAddress</ref><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.Bcc<sp/>=<sp/>targetUsers.Select(x<sp/>=&gt;<sp/>x.Email).ToList();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>with<sp/>SMTP<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1ab95198e9ba5de6d66f0fd5b68c9eba76" kindref="member">_settings</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1_1_settings_1a3218228740654344244c645a009d891e" kindref="member">EmailChannel</ref>.ToLower()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smtp&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="namespace_d_a_o___notification_service" kindref="compound">DAO_NotificationService</ref>.<ref refid="namespace_d_a_o___notification_service_1_1_integrations" kindref="compound">Integrations</ref>.<ref refid="class_d_a_o___notification_service_1_1_integrations_1_1_smtp_mail_sender" kindref="compound">SmtpMailSender</ref>.SendEmail(model);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1a491e3fa3e6c7f394718ece76ac02b34a" kindref="member">monitizer</ref>.AddConsole(</highlight><highlight class="stringliteral">&quot;Email<sp/>sent.<sp/>To:&quot;</highlight><highlight class="normal"><sp/>+<sp/>Serializers.SerializeJson(model.To)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Channel:<sp/>SMTP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SimpleResponse()<sp/>{<sp/>Success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>Message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SimpleResponse()<sp/>{<sp/>Success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>Message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>ex)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1a491e3fa3e6c7f394718ece76ac02b34a" kindref="member">monitizer</ref>.AddException(ex,<sp/>LogTypes.ApplicationError,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SimpleResponse()<sp/>{<sp/>Success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>Message<sp/>=<sp/>ex.Message<sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[Route(</highlight><highlight class="stringliteral">&quot;SendPublicContactEmail&quot;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[HttpPost]</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>SimpleResponse<sp/><ref refid="class_d_a_o___notification_service_1_1_controllers_1_1_notification_controller_1a0248b667aa7b28ee73a3afed28c0104f" kindref="member">SendPublicContactEmail</ref>(SendEmailModel<sp/>model)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>emails<sp/>of<sp/>Admins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>userJson<sp/>=<sp/>Helpers.Request.Get(<ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1ab95198e9ba5de6d66f0fd5b68c9eba76" kindref="member">_settings</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1_1_settings_1aaf3b073ef3ccc2cff84b27b0d0eb9914" kindref="member">Service_Db_Url</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/Users/GetAdminUsers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Parse<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>usersObj<sp/>=<sp/>Helpers.Serializers.DeserializeJson&lt;List&lt;UserDto&gt;&gt;(userJson);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>email<sp/>to<sp/>first<sp/>Admin<sp/>and<sp/>pre<sp/>defined<sp/>contact<sp/>email</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usersObj.Count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model.To<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;string&gt;()<sp/>{<sp/>usersObj[0].Email,<sp/><ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1ab95198e9ba5de6d66f0fd5b68c9eba76" kindref="member">_settings</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1_1_settings_1a83717f1ddf5850078ee5640ff8fe93a6" kindref="member">ContactEmail</ref><sp/>};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>with<sp/>SMTP<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1ab95198e9ba5de6d66f0fd5b68c9eba76" kindref="member">_settings</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1_1_settings_1a3218228740654344244c645a009d891e" kindref="member">EmailChannel</ref>.ToLower()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;smtp&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="namespace_d_a_o___notification_service" kindref="compound">DAO_NotificationService</ref>.<ref refid="namespace_d_a_o___notification_service_1_1_integrations" kindref="compound">Integrations</ref>.<ref refid="class_d_a_o___notification_service_1_1_integrations_1_1_smtp_mail_sender" kindref="compound">SmtpMailSender</ref>.SendEmail(model);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1a491e3fa3e6c7f394718ece76ac02b34a" kindref="member">monitizer</ref>.AddConsole(</highlight><highlight class="stringliteral">&quot;Email<sp/>sent.<sp/>To:&quot;</highlight><highlight class="normal"><sp/>+<sp/>Serializers.SerializeJson(model.To)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Channel:<sp/>SMTP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SimpleResponse()<sp/>{<sp/>Success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>Message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SimpleResponse()<sp/>{<sp/>Success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>Message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Channel<sp/>not<sp/>found&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>ex)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_a_o___notification_service_1_1_program" kindref="compound">Program</ref>.<ref refid="class_d_a_o___notification_service_1_1_program_1a491e3fa3e6c7f394718ece76ac02b34a" kindref="member">monitizer</ref>.AddException(ex,<sp/>LogTypes.ApplicationError,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SimpleResponse()<sp/>{<sp/>Success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>Message<sp/>=<sp/>ex.Message<sp/>};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="DAO_NotificationService/Controllers/NotificationController.cs"/>
  </compounddef>
</doxygen>
